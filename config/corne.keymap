/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_del {
            bindings = <&kp DELETE>;
            key-positions = <10 11>;
        };

        combo_enter {
            bindings = <&kp ENTER>;
            key-positions = <38 39>;
        };

        combo_bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <21 22>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
       &kp TAB  &kp Q  &kp W         &kp E  &kp R      &kp T                    &kp Y  &kp U          &kp I    &kp O     &kp P  &kp BSPC
     &sk LCTRL  &kp A  &kp S         &kp D  &kp F      &kp G                    &kp H  &kp J          &kp K    &kp L  &kp SEMI   &kp SQT
&sk LEFT_SHIFT  &kp Z  &kp X         &kp C  &kp V      &kp B                    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH     &sl 3
                              &sk LEFT_GUI  &sl 1  &kp SPACE    &mt RIGHT_SHIFT SPACE  &sl 2  &sk RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION     &kp AT  &kp POUND          &kp DLLR       &kp PRCNT          &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans
&trans           &kp N1     &kp N2     &kp N3            &kp N4          &kp N5             &kp N6             &kp N7        &kp N8                &kp N9                 &kp N0  &kp BSPC
&trans           &trans  &kp TILDE  &kp GRAVE  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET        &trans                &trans                 &trans    &trans
                                       &trans             &to 1          &trans             &trans             &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &none    &none  &kp UNDERSCORE   &kp PLUS    &kp PAGE_UP           &kp CARET        &kp AMPS  &kp KP_MULTIPLY           &kp LPAR         &kp RPAR  &kp BSPC
 &trans  &kp HOME  &kp END       &kp MINUS  &kp EQUAL  &kp PAGE_DOWN      &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW    &kp RIGHT_ARROW            &none     &none
 &trans     &none    &none           &none      &none          &none    &kp C_PLAY_PAUSE  &kp C_PREVIOUS       &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &none
                                    &trans     &trans         &trans              &trans           &to 2           &trans
            >;
        };

        func {
            bindings = <
    &trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans
    &trans       &kp F11       &kp F12        &trans        &trans        &trans    &trans  &trans  &trans  &trans   &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans  &trans
                                              &trans        &trans        &trans    &trans  &trans  &trans
            >;
        };
    };
};
