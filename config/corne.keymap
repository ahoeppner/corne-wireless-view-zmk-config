/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };

    macros {
        work_pw: work_pw {
            compatible = "zmk,behavior-macro";
            label = "WORK_PW";
            #binding-cells = <0>;
            bindings = <&kp LS(M) &kp A &kp K &kp E &kp SPACE &kp S &kp E &kp L &kp F &kp SPACE &kp R &kp E &kp P &kp O &kp R &kp T &kp I &kp N &kp G &kp SPACE &kp H &kp A &kp P &kp P &kp E &kp N &kp DOT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
     &kp TAB  &kp Q  &kp W      &kp E      &kp R               &kp T        &kp Y            &kp U            &kp I    &kp O     &kp P  &kp DEL
&sk LEFT_ALT  &kp A  &kp S      &kp D      &kp F               &kp G        &kp H            &kp J            &kp K    &kp L  &kp SEMI  &kp SQT
  &sk LSHIFT  &kp Z  &kp X      &kp C      &kp V               &kp B        &kp N            &kp M        &kp COMMA  &kp DOT  &kp FSLH    &sl 3
                            &sk LCTRL  &lt 1 TAB  &mt LEFT_GUI ENTER    &kp SPACE  &lt 2 BACKSPACE  &sk RIGHT_SHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION   &kp AT_SIGN     &kp POUND    &kp DOLLAR     &kp PERCENT          &kp CARET  &kp AMPERSAND     &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5       &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &trans
&trans            &none     &kp TILDE     &kp GRAVE      &kp LBKT  &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp RBKT     &kp COMMA               &kp DOT               &kp FSLH  &trans
                                             &trans         &to 1          &trans             &trans         &trans     &kp COLON
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &kp DELETE             &none  &kp UNDERSCORE     &kp PLUS    &kp PAGE_UP               &none       &none       &none  &kp BACKSLASH      &kp PIPE  &trans
&trans       &kp HOME           &kp END       &kp MINUS    &kp EQUAL  &kp PAGE_DOWN            &kp LEFT    &kp DOWN      &kp UP      &kp RIGHT     &kp K_APP  &trans
&trans  &kp LESS_THAN  &kp GREATER_THAN      &kp K_COPY  &kp K_PASTE  &kp SEMICOLON    &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT   &kp C_VOL_DN  &kp C_VOL_UP  &trans
                                          &mt LCTRL ESC       &trans          &none              &trans       &to 2      &trans
            >;
        };

        func {
            bindings = <
&trans    &kp F1   &kp F2  &kp F3  &kp F4  &kp F5        &kp F6        &kp F7        &kp F8        &kp F9       &kp F10  &kp C_SLEEP
&trans   &kp F11  &kp F12   &none   &none   &none    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &work_pw
&trans  &kp CAPS    &none   &none   &none   &none         &none         &none         &none         &none   &kp C_RESET        &none
                            &none   &none   &none         &none         &none         &none
            >;
        };
    };
};
